language: go
dist: xenial
go:
  - 1.13.x

services:
  - docker

addons:
  apt:
    packages: [liblzo2-dev]

env:
  global:
    - TEST_MODIFIER=-race
    - CACHE_FOLDER=$HOME/docker-images
    - IMAGE=wal-g/docker_prefix
    - IMAGE_UBUNTU=wal-g/ubuntu
    - IMAGE_GOLANG=wal-g/golang
    - CACHE_FILE_UBUNTU=${CACHE_FOLDER}/wal-g_ubuntu-${TRAVIS_COMMIT}.tgz
    - CACHE_FILE_GOLANG=${CACHE_FOLDER}/wal-g_golang-${TRAVIS_COMMIT}.tgz
    - CACHE_FILE_DOCKER_PREFIX=${CACHE_FOLDER}/docker_prefix-${TRAVIS_COMMIT}.tgz

jobs:
  include:
    - stage: build image
      env:
        - USE_LZO=1
      script: make pg_save_image
      workspaces:
        create:
          name: image_cache
          paths:
            - ${CACHE_FILE_DOCKER_PREFIX}
            - ${CACHE_FILE_UBUNTU}
            - ${CACHE_FILE_GOLANG}
    - stage: GitHub Release
      script: echo "Deploying to GitHub releases ..."
      before_deploy:
        - tar -zcf wal-g.linux-amd64.tar.gz -C main/pg wal-g
        - sha256sum wal-g.linux-amd64.tar.gz > wal-g.linux-amd64.tar.gz.sha256
      deploy:
        provider: releases
        api_key:
          secure: BH6umfdGebbQ+DXwpNJyHGhoYnXisSsuFz5y8aavIB8kVxovVr6u8uxPsKmyffFfvkOvsMWmbBU4+bSB2BocCPHZQNX0kTr4eAZTUaWpHtKWlo5u0DFwlBfAWih1pbZbTDU//FixS29zUuhKy/JXQRUbE1hal16AelyUcmuRudzod5r4IWm11e6R8/aVTJerZGgxUehsWThV8/VAJPLmOfcS0aDdotOdb/xgTFkqAaiCSZkZcHeGL2I/S4yl8NteiesUw8/GyRDQxwggRk+LJUQ0ouJai2J0kbRCROnTi219pOcXtQ3cGyy5rmxrdmL5q0RckB5i2aLDlIiuYMO3FIedisaBSmajpvqiZhZWxKAP6pGtsa4khCetzkiu9YwZ8SsGPRTR8TL8DmfqSTVRI67KMxcWx+EcGHM3fBfljkc+rSGH4cEmkMxAXmneSDkVGYkGYFShsJqpeTD4O89WFeTQsRZOf8Az2udF3MQZ4Z69f7PFzhPoVrrHYtVm1AJwJUUikcDE0z6xBv+mH3IDxdHVY0lLqpo6tBPt9jY/Hjm1UAiyLYwMN3/ioLyg9lIDv8p9V9TI/+UBlKgvJeZf4nzECP5eDKK1xTkZilN6tjg0dAQQ1l455yKrMV/i5oVLh16Kfv0Ari1YqfjlIXmWNHpvcfm6FN1CrPm8+caCNh8=
        skip_cleanup: true
        file:
          - wal-g.linux-amd64.tar.gz
          - wal-g.linux-amd64.tar.gz.sha256
        on:
          repo: bdurrow/wal-g
          tags: true
    - stage: unit tests
      env:
      - USE_LIBSODIUM=1
      - USE_LZO=1
      script: make all_unittests
    - stage: integration tests
    - script: make TEST="pg_backup_mark_impermanent_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_backup_mark_permanent_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_config_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_crypto_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_delta_backup_wal_delta_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_full_backup_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_delete_before_name_find_full_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_delete_retain_full_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_delete_before_time_find_full_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_delete_without_confirm_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_ghost_table_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_delete_end_to_end_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_delta_backup_fullscan_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_several_delta_backups_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_several_delta_backups_reverse_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_delete_retain_find_full_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_wale_compatibility_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_delete_before_permanent_full_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_delete_before_permanent_delta_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_tablespace_support_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_wal_perftest" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_backup_perftest" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_catchup_test" pg_integration_test
      workspaces:
        use: image_cache
    - script: make TEST="pg_wale_tablespace_compatibility_test" pg_integration_test
      workspaces:
        use: image_cache
    - stage: integration tests
    - script: make mysql_test
      workspaces:
        use: image_cache
    - stage: integration tests
    - script: make mongo_test
      workspaces:
        use: image_cache
    - script: make MONGO_VERSION="4.2.3" MONGO_MAJOR="4.2" mongo_features
      workspaces:
        use: image_cache
    - script: make MONGO_FEATURE="backup" MONGO_VERSION="4.0.17" MONGO_MAJOR="4.0" mongo_features
      workspaces:
        use: image_cache
    - script: make MONGO_FEATURE="backup" MONGO_VERSION="3.6.17" MONGO_MAJOR="3.6" mongo_features
      workspaces:
        use: image_cache
    - stage: integration tests
    - script: make redis_test
      workspaces:
        use: image_cache

notifications:
  email: false

